// /api/check-vpn-payment.js

import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.VITE_SUPABASE_URL, // –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ—Ç –∂–µ URL
  process.env.SUPABASE_KEY // üîê –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
);

export default async function handler(req, res) {
  const { user_id } = req.query;

  if (!user_id) {
    return res.status(400).json({ error: 'user_id is required' });
  }

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å—Ç—å –ª–∏ —É—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞ –≤ payments
    const { data, error } = await supabase
      .from('payments')
      .select('*')
      .eq('user_id', user_id)
      .eq('status', 'succeeded')
      .limit (1)
      .order('created_at', { ascending: false })();

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ payments:', error);
      return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ payments' });
    }

    if (data) {
      // 2. –û–±–Ω–æ–≤–∏—Ç—å users.hasVpnBoost = true (–µ—Å–ª–∏ –µ—â—ë –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ)
      const { error: updateError } = await supabase
        .from('users')
        .update({ hasVpnBoost: true })
        .eq('user_id', user_id);
      
      if (updateError) {
        console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è hasVpnBoost:', updateError);
      }
      
      // 3. –í–µ—Ä–Ω—É—Ç—å —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
      return res.status(200).json({ success: true });
    } else {
      return res.status(200).json({ success: false }); // –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    }
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
    return res.status(500).json({ error: 'Server error' });
  }
}
