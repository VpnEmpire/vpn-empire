// /api/check-vpn-payment.js

import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.VITE_SUPABASE_URL, // –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ—Ç –∂–µ URL
  process.env.SUPABASE_KEY // üîê –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
);

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' });
  }

  const { user_id, task_key } = req.body;

  if (!user_id || !task_key) {
    return res.status(400).json({ error: 'user_id –∏ task_key –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
  }

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å—Ç—å –ª–∏ —É—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞ –≤ payments
    const { data, error } = await supabase
      .from('payments')
      .select('*')
      .eq('user_id', user_id)
      .eq('status', 'succeeded')
      .eq('used', false)
      .order('created_at', { ascending: false })
      .limit(1)
      .maybeSingle();
      
      
    if (error || !data || data.length === 0) {
      return res.status(200).json({ success: false });
    }

    const payment = data[0];
    
    // 2. –ü–æ–º–µ—á–∞–µ–º –æ–ø–ª–∞—Ç—É –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—É—é
    const { error: updateError } = await supabase
      .from('payments')
      .update({ used: true, task_key: 'activateVpn' })
      .eq('id', payment.id);
       
      if (updateError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ used:', updateError);
      return res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å –æ–ø–ª–∞—Ç—É –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—É—é' });
    }
    
          // 3. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö
    return res.status(200).json({ success: true });

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
    return res.status(500).json({ error: 'Server error' });
  }
}
