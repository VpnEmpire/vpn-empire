// /api/add-referral.js

import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.SUPABASE_KEY
);

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ success: false, error: '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' });
  }

  const { user_id, referral_id } = req.body;
  console.log("üì® –ü–æ–ª—É—á–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:", { user_id, referral_id });

  if (!user_id || !referral_id || user_id === referral_id) {
    return res.status(400).json({ success: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã' });
  }

  // 1. –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –ø–∞—Ä–∞
  const { data: existing, error: fetchError } = await supabase
    .from('referrals')
    .select('id')
    .eq('user_id', user_id)
    .eq('referral_id', referral_id)
    .eq('source', 'game')
    .maybeSingle();

  if (fetchError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:', fetchError);
    return res.status(500).json({ success: false, error: '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞' });
  }

  if (existing) {
    console.warn(`‚ö†Ô∏è –†–µ—Ñ–µ—Ä–∞–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${referral_id} ‚Üí ${user_id}`);
    return res.status(200).json({ success: true, message: '–†–µ—Ñ–µ—Ä–∞–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' });
  }

  // 2. –î–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
  const { error: insertError } = await supabase
    .from('referrals')
    .insert([{ user_id, referral_id, source: 'game' }]);

  if (insertError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:', insertError);
    return res.status(500).json({ success: false, error: '–û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏' });
  }

   // 3. –ü–æ–ª—É—á–∏–º —Ç–µ–∫—É—â–∏–π —Å—á—ë—Ç—á–∏–∫ —É –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
  const { data: userData, error: fetchUserError } = await supabase
    .from('users')
    .select('referrals')
    .eq('user_id', referral_id)
    .maybeSingle();

  if (fetchUserError || !userData) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å—á—ë—Ç—á–∏–∫–∞:', fetchUserError);
    return res.status(500).json({ success: false, error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞' });
  }

  const newCount = (userData.referrals || 0) + 1;

  // 4. –û–±–Ω–æ–≤–∏–º —Å—á—ë—Ç—á–∏–∫ —É –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
  const { error: updateError } = await supabase
    .from('users')
    .update({ referrals: newCount })
    .eq('user_id', referral_id);

  if (updateError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—á—ë—Ç—á–∏–∫–∞:', updateError);
    return res.status(500).json({ success: false, error: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞' });
  }

  console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª: ${referral_id} ‚Üí ${user_id}`);
  return res.status(200).json({ success: true, message: 'Referral added successfully' });
}
