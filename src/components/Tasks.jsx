import React, { useState, useEffect } from 'react';
import '../App.css';

const tasksData = [
  { id: 1, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 1 –¥—Ä—É–≥–∞', reward: 50, requiresRef: 1 },
  { id: 2, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 3 –¥—Ä—É–≥–∞', reward: 150, requiresRef: 3 },
  { id: 3, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 5 –¥—Ä—É–∑–µ–π', reward: 300, requiresRef: 5 },
  { id: 4, title: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Telegram', reward: 100 },
  { id: 5, title: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Instagram', reward: 100 },
  { id: 6, title: '–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö', reward: 200 },
  { id: 7, title: '–ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç', reward: 100 },
  { id: 8, title: '–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é', reward: 100 },
  { id: 9, title: '–ó–∞–π—Ç–∏ –≤ VPN —Å–µ–≥–æ–¥–Ω—è', reward: 100 },
];

function TasksTab({ coins, setCoins }) {
  const [completedTasks, setCompletedTasks] = useState(() => {
    const saved = localStorage.getItem('completedTasks');
    return saved ? JSON.parse(saved) : [];
  });

  const [userId, setUserId] = useState(null);
  const [copied, setCopied] = useState(false);
  const [referrals, setReferrals] = useState(3); // üîÅ –∑–∞–≥–ª—É—à–∫–∞ ‚Äî –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å backend

  useEffect(() => {
    const tgUserId = window?.Telegram?.WebApp?.initDataUnsafe?.user?.id;
    if (tgUserId) setUserId(tgUserId);
  }, []);

  const handleCopy = () => {
    const referralLink = `https://t.me/OrdoHereticus_bot?start=${userId}`;
    navigator.clipboard.writeText(referralLink).then(() => {
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    });
  };

  const handleComplete = (task) => {
    if (completedTasks.includes(task.id)) return;

    // üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –∑–∞–¥–∞–Ω–∏—è
    if (task.requiresRef && referrals < task.requiresRef) {
      alert(`–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ ${referrals}, –Ω—É–∂–Ω–æ ${task.requiresRef}`);
      return;
    }

    const newCompleted = [...completedTasks, task.id];
    setCompletedTasks(newCompleted);
    setCoins(prev => {
      const updated = prev + task.reward;
      localStorage.setItem('coins', updated.toString());
      return updated;
    });

    localStorage.setItem('completedTasks', JSON.stringify(newCompleted));
  };

  return (
    <div className="main-screen">
      <h2>üìã –ó–∞–¥–∞–Ω–∏—è</h2>
      {tasksData.map((task) => (
        <div key={task.id} className="task-card">
          <span>
            {task.title}
            {completedTasks.includes(task.id) && <span className="done"> ‚úÖ</span>}
            {!completedTasks.includes(task.id) && task.title.toLowerCase().includes('–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å') && userId && (
              <div className="referral-box">
                <code>{`https://t.me/OrdoHereticus_bot?start=${userId}`}</code>
                <button className="copy-btn" onClick={handleCopy}>
                  {copied ? '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!' : 'üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}
                </button>
              </div>
            )}
          </span>
          {!completedTasks.includes(task.id) && (
            <button onClick={() => handleComplete(task)}>–í—ã–ø–æ–ª–Ω–∏—Ç—å</button>
          )}
        </div>
      ))}
    </div>
  );
}

export default TasksTab;
