// src/components/TasksTab.jsx
import React, { useState, useEffect } from 'react';
import '../App.css';

const defaultTasks = [
  { id: 1, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 1 –¥—Ä—É–≥–∞', reward: 50, requiresRef: 1 },
  { id: 2, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 2 –¥—Ä—É–≥–∞', reward: 100, requiresRef: 2 },
  { id: 3, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 3 –¥—Ä—É–≥–∞', reward: 200, requiresRef: 3 },
  { id: 4, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 4 –¥—Ä—É–≥–∞', reward: 300, requiresRef: 4 },
  { id: 5, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 5 –¥—Ä—É–∑–µ–π', reward: 400, requiresRef: 5 },
  { id: 6, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 6 –¥—Ä—É–∑–µ–π', reward: 500, requiresRef: 6 },
  { id: 7, title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 7 –¥—Ä—É–∑–µ–π', reward: 600, requiresRef: 7 },
  { id: 8, title: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Telegram', reward: 100, requiresSub: true },
  { id: 9, title: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Instagram', reward: 100 },
  { id: 10, title: '–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö', reward: 200 },
  { id: 11, title: '–ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç', reward: 100 },
  { id: 12, title: '–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é', reward: 100 },
  { id: 13, title: '–ó–∞–π—Ç–∏ –≤ VPN —Å–µ–≥–æ–¥–Ω—è', reward: 100 },
  { id: 14, title: '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å VPN', reward: 1000, type: 'payment', done: completedTasks.includes(14),
  checkEndpoint: '/api/check-payment' requiresVpn: true },
];

const TasksTab = ({ coins, setCoins }) => {
  const [tasks, setTasks] = useState(() => {
    const saved = localStorage.getItem('tasks');
    return saved ? JSON.parse(saved) : defaultTasks.map(t => ({ ...t, done: false }));
  });

  const [userId, setUserId] = useState(null);
  const [copied, setCopied] = useState(false);
  const [referrals, setReferrals] = useState(0);
  const [vpnActivated, setVpnActivated] = useState(false);
  const [subscribed, setSubscribed] = useState(false);

  useEffect(() => {
    const tgUserId = window?.Telegram?.WebApp?.initDataUnsafe?.user?.id;
    if (tgUserId) {
      setUserId(tgUserId);

      fetch(`/api/check-referrals?user_id=${tgUserId}`)
        .then(res => res.json())
        .then(data => setReferrals(data.referrals || 0));

      fetch(`/api/check-subscription?user_id=${tgUserId}`)
        .then(res => res.json())
        .then(data => setSubscribed(data.subscribed || false));
    }

    const vpn = localStorage.getItem('vpnActivated');
    if (vpn === 'true') setVpnActivated(true);
  }, []);

  const handleCopy = () => {
    const referralLink = `https://t.me/OrdoHereticus_bot?start=${userId}`;
    navigator.clipboard.writeText(referralLink).then(() => {
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    });
  };

  const handleComplete = (task, index) => {
    if (tasks[index].done) return;

    if (task.requiresRef && referrals < task.requiresRef) {
      alert(`–ù—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –º–∏–Ω–∏–º—É–º ${task.requiresRef} –¥—Ä—É–∑–µ–π. –°–µ–π—á–∞—Å: ${referrals}`);
      return;
    }

    if (task.requiresVpn && !vpnActivated) {
      alert('–ß—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ, –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ VPN –≤ –±–æ—Ç–µ.');
      return;
    }

    if (task.requiresSub && !subscribed) {
      alert('–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ Telegram-–∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ.');
      return;
    }

    const updatedTasks = [...tasks];
    updatedTasks[index].done = true;
    setTasks(updatedTasks);
    localStorage.setItem('tasks', JSON.stringify(updatedTasks));

    let total = coins + task.reward;
    if (task.title === '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å VPN') {
      localStorage.setItem('clickMultiplier', '2');
    }

    setCoins(total);
    localStorage.setItem('coins', total.toString());
  };

  return (
    <div className="main-screen">
      <h2>üìã –ó–∞–¥–∞–Ω–∏—è</h2>
      {tasks.map((task, index) => (
        <div key={index} className="task-card">
          <span>
            {task.title}
            {task.done && <span className="done"> ‚úÖ</span>}

            {!task.done && task.title.toLowerCase().includes('–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å') && userId && (
              <div className="referral-box">
                <code>{`https://t.me/OrdoHereticus_bot?start=${userId}`}</code>
                <button className="copy-btn" onClick={handleCopy}>
                  {copied ? '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!' : 'üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}
                </button>
                <div style={{ fontSize: '12px', marginTop: '6px', color: '#ccc' }}>
                  –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {referrals}
                </div>
              </div>
            )}

            {!task.done && task.title === '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å VPN' && (
              <div className="referral-box">
                <a
                  href={`https://t.me/OrdoHereticus_bot?start=pay`}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="copy-btn"
                >
                  üîí –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å VPN
                </a>
                <div style={{ fontSize: '12px', marginTop: '6px', color: '#ccc' }}>
                  –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ ¬´–í—ã–ø–æ–ª–Ω–∏—Ç—å¬ª
                </div>
              </div>
            )}
          </span>
          {!task.done && (
            <button onClick={() => handleComplete(task, index)}>–í—ã–ø–æ–ª–Ω–∏—Ç—å</button>
          )}
        </div>
      ))}
    </div>
  );
};

export default TasksTab;

