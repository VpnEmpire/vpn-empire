// src/components/RouletteTab.jsx
import { useState, useEffect, useRef } from 'react';
import './RouletteTab.css';

const RouletteTab = ({ coins, setCoins }) => {
  const [canSpin, setCanSpin] = useState(true);
  const [isSpinning, setIsSpinning] = useState(false);
  const [spinResult, setSpinResult] = useState(null);
  const winSoundRef = useRef(null);
  const spinSoundRef = useRef(null);

  useEffect(() => {
    const lastSpinDate = localStorage.getItem('lastSpinDate');
    const today = new Date().toDateString();
    if (lastSpinDate === today) setCanSpin(false);
  }, []);

  const spinWheel = () => {
    if (!canSpin || isSpinning) return;

    // –ó–≤—É–∫ –≤—Ä–∞—â–µ–Ω–∏—è
    if (spinSoundRef.current) {
      spinSoundRef.current.currentTime = 0;
      spinSoundRef.current.play();
    }

    setIsSpinning(true);
    const rewardOptions = [0, 50, 100, 150, 200, 300];
    const reward = rewardOptions[Math.floor(Math.random() * rewardOptions.length)];

    setTimeout(() => {
      const newCoins = coins + reward;
      setCoins(newCoins);
      setSpinResult(reward);
      setCanSpin(false);
      setIsSpinning(false);
      localStorage.setItem('coins', newCoins.toString());
      localStorage.setItem('lastSpinDate', new Date().toDateString());

      // –ó–≤—É–∫ –≤—ã–∏–≥—Ä—ã—à–∞
      if (winSoundRef.current) {
        winSoundRef.current.currentTime = 0;
        winSoundRef.current.play();
      }
    }, 3000);
  };

  return (
    <div className="roulette-tab">
      <h2>üé∞ –†—É–ª–µ—Ç–∫–∞</h2>
      <p>–ö—Ä—É—Ç–∏ —Ä—É–ª–µ—Ç–∫—É –∏ –ø–æ–ª—É—á–∞–π —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–∏–∑!</p>

      <div className={`wheel ${isSpinning ? 'spinning' : ''}`}></div>

      <button className="spin-button" onClick={spinWheel} disabled={!canSpin || isSpinning}>
        {isSpinning ? '–ö—Ä—É—Ç–∏—Ç—Å—è...' : '–ö—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É'}
      </button>

      {spinResult !== null && !isSpinning && (
        <div className="prize-text">
          {spinResult === 0
            ? 'üò¢ –ù–µ –ø–æ–≤–µ–∑–ª–æ... –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≤—Ç—Ä–∞!'
            : `üéâ –¢—ã –≤—ã–∏–≥—Ä–∞–ª üí∞ ${spinResult} –º–æ–Ω–µ—Ç!`}
        </div>
      )}

      <audio ref={spinSoundRef} src="/spin-sound.mp3" preload="auto" />
      <audio ref={winSoundRef} src="/coins_many.mp3" preload="auto" />
    </div>
  );
};

export default RouletteTab;

