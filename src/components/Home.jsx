import { useState, useEffect, useRef } from 'react';

const RANKS = [
  { title: '–ù–æ–≤–∏—á–æ–∫', threshold: 0 },
  { title: '–ê–≥–µ–Ω—Ç', threshold: 300 },
  { title: '–ü—Ä–æ—Ñ–∏', threshold: 600 },
  { title: '–≠–∫—Å–ø–µ—Ä—Ç', threshold: 1000 },
  { title: '–õ–µ–≥–µ–Ω–¥–∞ VPN', threshold: 1500 }
];

const Home = ({ coins, setCoins }) => {
  const [dailyLimit, setDailyLimit] = useState(100);
  const [isShaking, setIsShaking] = useState(false);
  const clickSoundRef = useRef(null);

  useEffect(() => {
    const storedDate = localStorage.getItem('lastClickDate');
    const today = new Date().toDateString();

    if (storedDate !== today) {
      setCoins(0);
      setDailyLimit(100);
      localStorage.setItem('lastClickDate', today);
      localStorage.setItem('coins', '0');
    } else {
      const storedCoins = parseInt(localStorage.getItem('coins')) || 0;
      setCoins(storedCoins);
      setDailyLimit(100 - storedCoins);
    }
  }, []);

  const handleClick = () => {
    if (coins < 100) {
      const newCoins = coins + 1;
      setCoins(newCoins);
      setDailyLimit(100 - newCoins);
      localStorage.setItem('coins', newCoins.toString());
      if (clickSoundRef.current) {
        clickSoundRef.current.currentTime = 0;
        clickSoundRef.current.play();
      }
      setIsShaking(true);
      setTimeout(() => setIsShaking(false), 300);
    }
  };

  const getRank = () =>
    RANKS.slice().reverse().find(rank => coins >= rank.threshold)?.title || '–ù–æ–≤–∏—á–æ–∫';

  const getHelperMessage = () => {
    if (coins >= 1500) return 'üéâ –¢—ã ‚Äî –õ–µ–≥–µ–Ω–¥–∞ VPN! –ú–∏—Ä —Å–≤–æ–±–æ–¥—ã –æ—Ç–∫—Ä—ã—Ç –¥–ª—è —Ç–µ–±—è.';
    if (coins >= 1000) return 'üß† –¢—ã —Å—Ç–∞–ª –≠–∫—Å–ø–µ—Ä—Ç–æ–º! –û—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –¥–æ –ª–µ–≥–µ–Ω–¥—ã.';
    if (coins >= 600) return 'üöÄ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –ü—Ä–æ—Ñ–∏! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.';
    if (coins >= 300) return 'üïµÔ∏è –¢—ã —É–∂–µ –ê–≥–µ–Ω—Ç! –ü–æ–¥–µ–ª–∏—Å—å VPN —Å –¥—Ä—É–∑—å—è–º–∏.';
    if (coins > 0) return 'üî• –•–æ—Ä–æ—à–µ–µ –Ω–∞—á–∞–ª–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π –∫–ª–∏–∫–∏ –∏ –≤—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è.';
    return 'üëã –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫! –ö–ª–∏–∫–∞–π –Ω–∞ —Ä–æ–±–æ—Ç–∞ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –º–æ–Ω–µ—Ç—ã.';
  };

  return (
    <div>
      <div className="stats">
        <p><strong>–ú–æ–Ω–µ—Ç:</strong> {coins} $RICH</p>
        <p><strong>–ó–≤–∞–Ω–∏–µ:</strong> {getRank()}</p>
      </div>
      <img
        src="/robot.png"
        alt="–†–æ–±–æ—Ç"
        className={`robot ${isShaking ? 'shake' : ''}`}
        onClick={handleClick}
      />
      <div className="counter">{coins}/100 –º–æ–Ω–µ—Ç {dailyLimit <= 0 && '(–ª–∏–º–∏—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è)'}</div>
      <div className="helper">
        <p>{getHelperMessage()}</p>
      </div>
      <audio ref={clickSoundRef} src="/click.mp3" preload="auto" />
    </div>
  );
};

export default Home;
